---
- name: Install standalone mongodb

  hosts: localhost
  connection: local

  vars:  
    #your region  
    region: us-east-1
    keyname: cf-prov-1
    #your ip address
    allowed_ip: 0.0.0.0/0
    instance_type: t2.micro     
    image: ami-fce3c696

  tasks:

  - name: create key pair  
    ec2_key:
      region: "{{ region }}"  
      name: "{{ keyname }}"      
    register: mykey  

  - name: write the private key to a file  
    shell: echo -e "{{ item.value.private_key }}" > ~/.ssh/"{{ keyname }}".pem && chmod 600 ~/.ssh/"{{ keyname }}".pem && sed -i 's/^-e //g' ~/.ssh/"{{ keyname }}".pem      
    with_dict: mykey   
    when: item.value.private_key is defined     

  - name: create security group  
    ec2_group:
      region: "{{ region }}"
      #your security group name  
      name: sg_mongodb
      description: security group for mongodb host
      rules:
        - proto: tcp  
          from_port: 22  
          to_port: 22  
          cidr_ip: "{{ allowed_ip }}"
        - proto: tcp  
          from_port: 27017
          to_port: 27017
          cidr_ip: 0.0.0.0/0
      rules_egress:  
        - proto: all  
          cidr_ip: 0.0.0.0/0    

  - name: launch ec2 instance  
    ec2:
      region: "{{ region }}"  
      key_name: "{{ keyname }}"
      instance_type: "{{ instance_type }}"    
      image: "{{ image }}"  
      wait: yes    
      group: sg_mongodb
      instance_tags:  
        Name: mongodb-3
        class: mongodb
    register: ec2 
   
  - name: associate new EIP for the instance  
    ec2_eip:
      region: "{{ region }}"
      instance_id: "{{ item.id }}"
    with_items: ec2.instances   
    when: item.id is defined   

  - name: Allocating elastic IP to instance
    ec2_eip:
      region: "{{ region }}"
      instance_id: "{{ ec2.instances[0].id }}"
    register: instance_eip
  - debug: var=instance_eip.public_ip

  - name: Wait for instances to listen on port 22
    wait_for:
      state: started
      host: "{{ instance_eip.public_ip }}"
      port: 22
    when: ec2|changed

  - add_host: hostname={{ instance_eip.public_ip }} groupname="ec2hosts"

- name: With the newly provisioned EC2 node install Mongodb
  hosts: ec2hosts
  vars:
    mongodb_users:
      - { username: foo, password: bar, database: cloudifice }

  roles:
    - mongodb
